{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/filtersSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","activeFilter","filter","item","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","filtersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","btnClass","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa280bed.chunk.js","sourcesContent":["export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\n        try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch (e) {\n            throw e;\n        }\n    };\n\n    return { request }\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\n// --------------------------------------------------------\r\n// const initialState = {\r\n//     heroes: [],\r\n//     heroesLoadingStatus: 'idle',\r\n// }\r\n//! createEntityAdapter() \r\nconst heroesAdapter = createEntityAdapter();            // створ адаптер, повер. {} з методами, селект.\r\n\r\nconst initialState = heroesAdapter.getInitialState({    // створ початкові знач\r\n    heroesLoadingStatus: 'idle',\r\n});\r\n\r\n// --------------------------------------------------------\r\n//! createAsyncThunk()\r\n// fn поверне 3 'type' action creators:             //! panding, fulfilled, rejected\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',                           // name тип події- імя зрізу\\тип дії\r\n    async () => {                                   // fn повертає PROMISE, приймає (ID, різні API самого thunk)\r\n        const { request } = useHttp();\r\n        return await request(\"http://localhost:3001/heroes\")\r\n    }\r\n);\r\n// --------------------------------------------------------\r\n//! функція приймає 4 аргументи та поверне 3 сутності: імя зрізу, обєкт з actions, reducer\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        heroCreated: (state, action) => {\r\n            // state.heroes.push(action.payload)\r\n            heroesAdapter.addOne(state, action.payload);     //! CRUD Добавив героя .addOne() \r\n        },\r\n        heroDeleted: (state, action) => {\r\n            // state.heroes = state.heroes.filter(item => item.id !== action.payload)\r\n            heroesAdapter.removeOne(state, action.payload);  //! CRUD Видалив героя .removeOne    \r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => { state.heroesLoadingStatus = 'loading' })\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                // state.heroes = action.payload;\r\n                heroesAdapter.setAll(state, action.payload);  //! CRUD Записав усіх героїв .setAll()\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => { state.heroesLoadingStatus = 'error'; })\r\n            .addDefaultCase(() => { })\r\n    }\r\n});\r\n\r\n// Витягуєм Actions, Reducer з createSlice()\r\nconst { actions, reducer } = heroesSlice;\r\n\r\n// --------------------------------------------------------\r\nconst { selectAll } = heroesAdapter.getSelectors(state => state.heroes);       //! .getSelector() Витягуєм усіх 'selectAll'\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,                                // ( state) => state.heroes.heroes //! 'selectAll'\r\n    (filter, heroes) => {\r\n        if (filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter)\r\n        }\r\n    }\r\n);\r\n// --------------------------------------------------------\r\n\r\n// Експортуєм Actions, Reducer\r\nexport default reducer;\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted } = actions;","const HeroesListItem = ({ name, description, element, onDelete }) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li\n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n                className=\"img-fluid w-25 d-inline\"\n                alt=\"unknown hero\"\n                style={{ 'objectFit': 'cover' }} />\n            <div className=\"card-body\">\n\n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete}\n                className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';  //! selectAll->.getSelector() \nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\n    // const filteredHeroesSelector = createSelector(                          //? перенесено в heroesSlice.js\n    //     (state) => state.filters.activeFilter,\n    //     selectAll,                              \n    //     (filter, heroes) => {\n    //         console.log(heroes);\n    //         if (filter === 'all') {\n    //             return heroes;\n    //         } else {\n    //             return heroes.filter(item => item.element === filter)\n    //         }\n    //     }\n    // );\n\n    const filteredHeroes = useSelector(filteredHeroesSelector)\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const { request } = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes())\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner />;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Помилка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героїв поки що нема</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({ id, ...props }) => {\n            return (\n                <CSSTransition\n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)} />\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;\n","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\n// --------------------------------------------------------\r\n// const initialState = {\r\n//     filters: [],\r\n//     filtersLoadingStatus: 'idle',\r\n//     activeFilter: 'all'\r\n// }\r\n//! createEntityAdapter() \r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n})\r\n// --------------------------------------------------------\r\n//! createAsyncThunk()\r\n// fn поверне 3 'type' action creators:  //! panding, fulfilled, rejected\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    async () => {\r\n        const { request } = useHttp();\r\n        return await request(\"http://localhost:3001/filters\")\r\n    }\r\n)\r\n// --------------------------------------------------------\r\n//! функція приймає 4 аргументи та поверне 3 сутності: імя зрізу, обєкт з action, reducer\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => {\r\n                state.filtersLoadingStatus = 'loading'\r\n            })\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                // state.filters = action.payload\r\n                filtersAdapter.setAll(state, action.payload)         //! CRUD Записав усі фільтри з адаптера\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {\r\n                state.filtersLoadingStatus = 'error'\r\n            })\r\n            .addDefaultCase(() => { })\r\n    }\r\n});\r\n\r\n//! Витягуєм Actions, Reducer \r\nconst { actions, reducer } = filtersSlice;\r\n// --------------------------------------------------------\r\n\r\n//! витягуєм-експортуєм усі фільтри з адаптера\r\nexport const { selectAll } = filtersAdapter.getSelectors(state => state.filters);\r\n\r\n// --------------------------------------------------------\r\n//! Експортуєм Actions, Reducer\r\nexport default reducer;\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions;\r\n\r\n","\nimport { configureStore } from '@reduxjs/toolkit'\n// import heroes from '../reducers/heroes';\n// import filters from '../reducers/filters';\nimport filters from '../components/heroesFilters/filtersSlice';\nimport heroes from '../components/heroesList/heroesSlice';\n\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n}\n\nconst store = configureStore({\n    reducer: { heroes, filters },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;\n\n\n// const store = createStore(\n//     combineReducers({ heroes, filters }),\n//     compose(applyMiddleware(ReduxThunk, stringMiddleware),\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n// );","import { useHttp } from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport store from '../../store';            //!\n\nimport { selectAll } from '../heroesFilters/filtersSlice';\nimport { heroCreated } from '../heroesList/heroesSlice';\n\nconst HeroesAddForm = () => {\n    // контроль форми\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const { filtersLoadingStatus } = useSelector(state => state.filters);\n    const filters = selectAll(store.getState())      //!\n    const dispatch = useDispatch();\n    const { request } = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        // Відправка данних на сервер у форматі JSON\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n            .then(res => console.log(res, 'Отправка успешна'))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err));\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n\n        if (filters && filters.length > 0) {\n            return filters.map(({ name, label }) => {\n                // eslint-disable-next-line\n                if (name === 'all') return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Імя нового героя</label>\n                <input\n                    required\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    placeholder=\"Як мене звати?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Опис</label>\n                <textarea\n                    required\n                    name=\"text\"\n                    className=\"form-control\"\n                    id=\"text\"\n                    placeholder=\"Що я вмію?\"\n                    style={{ \"height\": '130px' }}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)} />\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Вибрати елемент героя</label>\n                <select\n                    required\n                    className=\"form-select\"\n                    id=\"element\"\n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я володію елементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Створити</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport store from '../../store';                    //!\n\nimport { filtersChanged, fetchFilters, selectAll } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const { filtersLoadingStatus, activeFilter } = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());       //! selectAll витягує filters зі store (adapter)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchFilters());\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner />;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Помилка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фільтри не знайдено</h5>\n        }\n\n        return arr.map(({ name, className, label }) => {\n\n            // use classnames  \n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n\n            return <button\n                key={name}\n                id={name}\n                className={btnClass}\n                onClick={() => dispatch(filtersChanged(name))}\n            >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Фільтр героїв по елементам </p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n\n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList />\n                <div className=\"content__interactive\">\n                    <HeroesAddForm />\n                    <HeroesFilters />\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}